{"version":3,"sources":["Components/date.js","Calendar.js","Components/Datapage.js","Components/Api.js","Components/Detail.js","App.js","index.js"],"names":["mounts","RU","US","mounts2","getCountDay","date","mount","newDate","Date","setMonth","getMonth","newDate2","setDate","getDate","getCurrentDay","number","d","Calendar","_ref","handleSetDate","handleSetNumberDate","lang","react_default","a","createElement","className","onClick","countPrev","countCurrent","arr","currentDay","getDay","i","countDayAndMount","push","active","length","x","getGridCurrentMount","map","el","react_router_dom","key","to","concat","Datapages","data","isVis","textDate","strDate","slice","getFullYear","id","alt","name","src","show","image","medium","premiered","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","language","api","res","wrap","_context","prev","next","fetch","abrupt","stop","_x","_x2","apply","this","arguments","Detail","param","location","pathname","split","obj","find","parseInt","entries","original","style","color","App","state","allLanguage","set","_this","setState","setLanguage","l","reverse","formatDate","then","json","_this2","react_router","exact","path","render","App_Language","src_Calendar","Datapage","Components_Detail","React","Component","Language","_ref2","ReactDOM","basename","process","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ca0f3bae.chunk.js","sourcesContent":["export const nextMount = 'next'\nexport const prevMount = 'prev'\n\nexport let mounts = {\n  RU: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', \n      'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n  US: ['January', 'February', 'March', 'April', 'May', 'June', 'July', \n      'August', 'September', 'October', 'November', 'December', ]\n}\n\nexport let mounts2 = {\n  RU: ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', \n      'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'],\n  US: ['January', 'February', 'March', 'April', 'May', 'June', 'July', \n      'August', 'September', 'October', 'November', 'December', ]\n}\n\n\nexport let getGridCurrentMount = (date) => {\n  const countPrev = getCountDay(date, prevMount)[1]\n  const countCurrent = getCountDay(date)[1] \n  let arr = []\n  let currentDay = date.getDay()\n  \n  for (let i = date.getDate(); i > 0; i--) {\n    currentDay <= 0 ? currentDay = 6 : currentDay--\n  }\n  let countDayAndMount = countPrev - currentDay\n  for (let i = 0; i < currentDay; i++) {\n    if (countPrev > countDayAndMount) {\n      arr.push( {number: countDayAndMount, active: false} )\n      countDayAndMount++\n    }\n  }\n  for (let i = 0; i < countCurrent; i++) {\n    arr.push({number: i + 1, active: true})\n  }\n  if (arr.length < 35) {\n    let x = 1\n    for (let i = arr.length; i < 35; i++) {\n      arr.push({number: x, active: false})\n      x++\n    }\n  }\n  if (arr.length > 35) {\n    let x = 1\n    for (let i = arr.length; i < 42; i++) {\n      arr.push({number: x, active: false})\n      x++\n    }\n  }\n  return arr\n}\n\nexport let getCountDay = (date, mount) => {\n  let number = 33\n  let newDate =  new Date(date);\n  if (mount === prevMount) newDate.setMonth(newDate.getMonth() - 1)\n  if (mount === nextMount) newDate.setMonth(newDate.getMonth() + 1)\n  let newDate2 = new Date(newDate);\n  newDate.setDate(number)\n  return [newDate2, number - newDate.getDate()]\n}","import React from \"react\"\nimport {getGridCurrentMount, getCountDay, nextMount, prevMount, mounts} from \"./Components/date\"\nimport {Link} from \"react-router-dom\"\n\nconst getCurrentDay = (number, date) => {\nlet d = new Date()\nif (date.getMonth() === d.getMonth() && number === d.getDate()) return 'calendar__square--day'\nreturn ''\n}\n\nconst Calendar = ({date, handleSetDate, handleSetNumberDate, lang}) => {\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar__head\">\n        <span \n          onClick={() => handleSetDate(getCountDay(date, prevMount)[0])} \n          className=\"calendar__prev\">{'<'}\n        </span>\n        <span>\n          {mounts[lang][date.getMonth()]}\n        </span>\n        <span  \n          onClick={() => handleSetDate(getCountDay(date, nextMount)[0])} \n          className=\"calendar__next\">{'>'}\n        </span>\n      </div>\n      <div className=\"calendar__content\">\n        {getGridCurrentMount(date).map((el, i) => \n          el.active \n          ? \n            <Link key={i} to='/films'>\n              <div \n                onClick={() => handleSetNumberDate(el)}\n                key={i} \n                className={`${el.active \n                  ? \"calendar__square\" \n                  : \"calendar__square calendar__square--noactive\"} ${getCurrentDay(el.number, date)}`}\n              >\n                {el.number}\n              </div>\n            </Link>\n          : \n            <div \n              onClick={() => handleSetNumberDate(el)}\n              key={i} \n              className={el.active \n                ? \"calendar__square\"\n                : \"calendar__square--noactive\" }>\n              {el.number}\n            </div>\n          )}\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar","import React from \"react\"\nimport { mounts2 } from \"./date\"\nimport {Link} from \"react-router-dom\"\n\nconst Datapages = ({ lang, date, data, isVis, textDate}) => {\n    let strDate = `${textDate.slice(-2)} ${mounts2[lang][date.getMonth()]} ${date.getFullYear()}`\n    return (\n      isVis \n      ? (\n        <div className=\"content\">\n          <div className=\"card__data\">{strDate}</div><hr />\n          {data.map(el => {\n            return (\n              <div key={el.id} className=\"card\">\n                <section className=\"card__section\">\n                  <img \n                    className=\"card__image\" \n                    alt={el.name} \n                    src={el.show.image === null ? '' : el.show.image.medium} \n                  />\n                  <div>\n                    <div>{el.show.name}</div>\n                    <div className=\"card__premiered\" >{el.show.premiered.slice(0, 4)}</div>\n                    <Link className=\"card__detail--color\" to={`/detail/${el.show.id}`} >Подробней...</Link>\n                  </div>\n                </section>\n              </div>)\n          })}\n        </div>\n        )\n      :\n        <div>Loading...</div>\n    )\n}\n\nexport default Datapages","let getData = async (date, language) => {\n  let api = `https://api.tvmaze.com/schedule?country=${language}&date=${date}`\n  let res = fetch(api)\n  return res\n}\n\nexport default getData\n","import React from \"react\"\n\nconst Detail = ({data, param}) => {\n  const id = param.location.pathname.split('/')[2]\n  let obj = data.find(el => el.show.id === parseInt(id))\n  \n  let arr = Object.entries(obj.show)\n  return (\n    <div className=\"detail\">\n      <img \n        className=\"detail__img\" \n        alt={obj.name} \n        src={obj.show.image === null ? '' : obj.show.image.original} \n      />\n  {arr.map(el => {\n    return (\n      <div key={el[0]}>\n        <span style={{color: 'red'}}>{el[0]}: </span>\n        <span style={{color: 'black'}}> {typeof(el[1]) === 'object' ? '--' : el[1]}:</span>\n      </div>)\n  })}\n    </div>\n  )\n}\n\nexport default Detail\n\n","import React from 'react';\nimport Calendar from './Calendar'\nimport './App.css';\nimport {Route  } from \"react-router-dom\"\nimport Datapage from \"./Components/Datapage\"\nimport getData from \"./Components/Api\"\nimport Detail from './Components/Detail';\n\nclass App extends React.Component {\n  state = {\n    date: new Date(),\n    textDate: '',\n    data: {},\n    isVis: false,\n    language: 'RU'\n  }\n\n  allLanguage = ['RU', 'US']\n  \n  handleSetDate = (set) => {\n    this.setState({date: set})\n  }\n\n  setLanguage = (l) => {\n    this.allLanguage.reverse()\n    this.setState({language: this.allLanguage[0]},\n      () => this.handleSetNumberDate({number: this.state.textDate.slice(-2)})\n      )\n  }\n\n  handleSetNumberDate = ({number}) => {\n    if (number === '') number = new Date().getDate()\n    const d = this.state.date || new Date()\n    let formatDate = d.getFullYear() + '-'\n    formatDate += (d.getMonth() + 1) < 10 ? '0' + (d.getMonth() + 1) : (d.getMonth() + 1)\n    formatDate += '-'\n    formatDate += number < 10 ? '0' + number : number\n    \n    getData(formatDate, this.state.language)\n      .then(res => res.json())\n      .then(data => this.setState({ data, isVis: true, textDate: formatDate}))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route exact path=\"/\" render={()=>\n          <Language setLanguage={this.setLanguage} allLanguage={this.allLanguage}/>} \n        />\n        <Route exact path=\"/\" render={()=>\n          <Calendar \n            lang={this.state.language}\n            date={this.state.date} \n            handleSetDate={this.handleSetDate}\n            handleSetNumberDate={this.handleSetNumberDate}\n          />} \n        />\n        <Route exact path=\"/films\" \n          render={() => \n            <Datapage \n              textDate={this.state.textDate} \n              lang={this.state.language} \n              date={this.state.date} \n              isVis={this.state.isVis} \n              data={this.state.data}\n            />} \n        />\n         <Route exact path=\"/detail/:id\" \n          render={(param) => \n            <Detail \n              param={param}\n              data={this.state.data}\n            />} \n        />\n      </div>\n    );\n  }\n}\nconst Language = ({setLanguage, allLanguage}) => {\n  return (\n    <div className=\"changeLanguage\">\n      <div \n        className=\"language\">{allLanguage[0]}\n      </div>\n      <div \n        onClick={() => setLanguage(allLanguage[1])} \n        className=\"language language2\">{allLanguage[1]}\n      </div>\n    </div>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  , document.getElementById('root')); \n\n\n"],"sourceRoot":""}